//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.09.23 at 09:19:11 PM CDT 
//


package org.fiveloyds.cookbook.domain;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;


/**
 * <p>Java class for cookingUnit.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="cookingUnit">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="tsp"/>
 *     &lt;enumeration value="tbs"/>
 *     &lt;enumeration value="cup"/>
 *     &lt;enumeration value="oz"/>
 *     &lt;enumeration value="lbs"/>
 *     &lt;enumeration value="pints"/>
 *     &lt;enumeration value="quarts"/>
 *     &lt;enumeration value="pinchs"/>
 *     &lt;enumeration value="pieces"/>
 *     &lt;enumeration value="parts"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlEnum
public enum CookingUnit {

    @XmlEnumValue("tsp")
    TSP("tsp"),
    @XmlEnumValue("tbs")
    TBS("tbs"),
    @XmlEnumValue("cup")
    CUP("cup"),
    @XmlEnumValue("oz")
    OZ("oz"),
    @XmlEnumValue("lbs")
    LBS("lbs"),
    @XmlEnumValue("pints")
    PINTS("pints"),
    @XmlEnumValue("quarts")
    QUARTS("quarts"),
    @XmlEnumValue("pinchs")
    PINCHS("pinchs"),
    @XmlEnumValue("pieces")
    PIECES("pieces"),
    @XmlEnumValue("parts")
    PARTS("parts");
    private final String value;

    CookingUnit(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CookingUnit fromValue(String v) {
        for (CookingUnit c: CookingUnit.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
